# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
input:
  opcua:
    endpoint: "opc.tcp://localhost:46010"
    nodeIDs:
      - '{"1": [{"node": "ns=2;s=Pressure", "name":"PressureName", "mtopic":"runtime","group": "D001", "db": "mssql", "historian": "influx", "sqlSp": "sp_sql_logging"}]}'
      - '{"2": [{"node": "ns=2;s=Temperature", "name":"Temperature", "mtopic":"runtime", "group": "D002", "db": "mssql", "historian": "influx", "sqlSp": "sp_sql_logging"}]}'
    subscribeEnabled: true
    insecure: true

pipeline:
  processors:
    - bloblang: |
        root = meta("Message").parse_json()
        root.timestamp_ms = (timestamp_unix_nano() / 1000000).floor()
        root.group = meta("group")
        root.db = meta("db")
        root.historian = meta("historian")
        root.sqlSp = meta("sqlSp")
        root.name = meta("name")

        let one = "%s%s= '%s'".format("@", "group", meta("group"))
        let three = "%s%s= %s".format("@", "timestamp_ms", root.timestamp_ms.string())
        let four = "%s%s= %s".format("@", "value", root.value)
        let gmeta = "%s, %s, %s".format($one,$three,$four)

        let query = meta("Message").replace_all("{","").replace_all("}","").split(",").map_each(item -> " %s%s".format("@",item)).string().replace_all("\"","").replace_all("\\","").replace_all("[","").replace_all("]","").replace_all(":","=")
        root.json = meta("Message").replace_all("{","").replace_all("}","")
        meta spq = "exec " + meta("sqlSp")+ " " + $query + ", " + $gmeta
        let g = "exec " + meta("sqlSp")+ " " + $query + ", " + $gmeta
        root.query = $g
output:
  broker:
    pattern: fan_out
    outputs:
      - mqtt:
          urls:
            - 'localhost:1883'
          topic: 'ia/raw/opcua/${! meta("opcua_path") }'
      
  
  #mqtt:
  #  urls:
  #    - 'localhost:1883'
  #  topic: 'ia/raw/opcua/${! meta("opcua_path") }'
  #  client_id: benthos-umh